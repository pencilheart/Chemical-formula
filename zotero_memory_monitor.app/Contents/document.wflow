<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>526</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>自动操作</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>运行AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- 设置内存限制（以GB为单位）set memoryLimit to 10-- 获取当前日期和时间set currentDateTime to (do shell script "date '+%Y-%m-%d %H:%M:%S'")-- 获取Zotero进程的内存使用量set totalMemory to 0try	set zoteroProcesses to (do shell script "pgrep -i 'Zotero'")	set zoteroPidList to paragraphs of zoteroProcesseson error	set zoteroPidList to {} -- 如果没有找到进程，设置为空列表end try-- 检查Zotero是否正在运行if (count of zoteroPidList) &gt; 0 then	repeat with pid in zoteroPidList		try			-- 使用 top 命令获取内存使用量			set processMemory to (do shell script "top -l 1 -pid " &amp; pid &amp; " | grep \"" &amp; pid &amp; "\" | awk '{print $8}'")			-- 检查内存单位，并进行相应的转换			if (processMemory ends with "G") then				-- 去掉结尾的 G，并转换为数字				set processMemory to (text 1 thru -2 of processMemory) as real			else if (processMemory ends with "M") then				-- 去掉结尾的 M，并转换为数字				set processMemory to (text 1 thru -2 of processMemory) as real				-- 将MB转换为GB				set processMemory to processMemory / 1024			else				-- 如果没有识别的单位，记录错误				do shell script "echo 'Unrecognized memory unit for PID: " &amp; pid &amp; "' &gt;&gt; /Users/jiaqihan/Documents/5Code/zotero_memory_log.txt"				set processMemory to 0			end if						set totalMemory to totalMemory + processMemory		on error			-- 错误处理，如果无法获取内存			do shell script "echo 'Error getting memory for PID: " &amp; pid &amp; "' &gt;&gt; /Users/jiaqihan/Documents/5Code/zotero_memory_log.txt"		end try	end repeat		-- 将总内存保留两位小数	set totalMemoryFormatted to my formatNumber(totalMemory)		-- 通知当前占用量	--do shell script "osascript -e 'display notification \"Zotero内存是" &amp; totalMemoryFormatted &amp; " GB\" with title \"Zotero Memory Alert\"'"		-- 检查总内存使用是否超过限制	if totalMemory &gt; memoryLimit then		-- 超过内存限制时记录日志		set logEntry to currentDateTime &amp; "：内存超过" &amp; memoryLimit &amp; "GB，准备重启Zotero，当前内存" &amp; totalMemoryFormatted &amp; "GB"		do shell script "echo " &amp; quoted form of logEntry &amp; " &gt;&gt; /Users/jiaqihan/Documents/5Code/zotero_memory_log.txt"				-- 发送通知并重启Zotero		do shell script "osascript -e 'display notification \"Zotero内存超过" &amp; memoryLimit &amp; "GB, 5s后重启...\" with title \"Zotero Memory Alert\"'"		delay 5 -- 等待5秒后关闭Zotero		tell application "Zotero" to quit		delay 2 -- 等待2秒，确保Zotero完全关闭		tell application "Zotero" to activate	end ifend if-- 自定义函数，格式化数字为保留两位小数的字符串on formatNumber(n)	return ((n * 100) as integer) / 100 -- 先将数字放大100，取整再除以100end formatNumber</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>IgnoresInput</key>
				<true/>
				<key>InputUUID</key>
				<string>A91DAC18-CADA-47D6-8B60-A3D3E816188E</string>
				<key>Keywords</key>
				<array>
					<string>运行</string>
				</array>
				<key>OutputUUID</key>
				<string>282E0804-8C4E-4212-90F8-0B22A0034B5E</string>
				<key>UUID</key>
				<string>83EC438A-EE57-45E6-8F4C-0A26CE3ACB5B</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>449.000000:315.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
